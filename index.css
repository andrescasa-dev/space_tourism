/* ======================== */
/* Reset and set up styles  */
html{
  font-size: 62.5%;
}

/*in order to maintain the ability to modify the color opacity I storage the content of rgb*/
/* the prefixes are useful when you try to find some variable witch crl + space */
:root{
  /*colors*/
  --clr-dark: 11 13 23;
  --clr-accent: 208 214 249;
  --clr-light: 249 249 249;

  /*font-size*/
  --fs-200: 1.4rem;
  --fs-300: 1.6rem;
  --fs-400: 1.8rem; /*base font size*/ 
  --fs-500: 2.8rem;
  --fs-600: 3.2rem;     
  --fs-700: 5.6rem;
  --fs-800: 10rem;
  --fs-900: 15rem;
  
  /* font-family */
  --ff-serif: 'Bellefair', serif;
  --ff-sans-cond: 'Barlow Condensed', sans-serif;
  --ff-sans-normal: 'Barlow', sans-serif;
}

/* ======================== */
/* ======================== */
/* Reset and set up styles  */

*,
*::before,
*::after{
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
p{
  font-weight: 400;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  background: rgb( var(--clr-dark) );
  color: rgb( var(--clr-light) );
  line-height: 1.5;
}

img,
picture {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
}

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* ======================== */
/* ======================== */
/*      Utility classes     */

.grid{
  display: grid;
  gap: var(--gap);
}

.flex{
  display: flex;
  gap: var(--gap);
}

.container{
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 80rem; /*the value its relative to the project */
}

/* hide the Element but it remains in the DOM */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.bg-dark { background-color: rgb( var(--clr-dark) );}
.bg-accent { background-color: rgb( var(--clr-accent) );}
.bg-light { background-color: rgb( var(--clr-light) );}

.text-dark { color: rgb( var(--clr-dark) );}
.text-accent { color: rgb( var(--clr-accent) );}
.text-light { color: rgb( var(--clr-light) );}

/* typography */

.ff-serif { font-family: var(--ff-serif); } 
.ff-sans-cond { font-family: var(--ff-sans-cond); } 
.ff-sans-normal { font-family: var(--ff-sans-normal); } 

.letter-spacing-1 { letter-spacing: 4.75px; } 
.letter-spacing-2 { letter-spacing: 2.7px; } 
.letter-spacing-3 { letter-spacing: 2.35px; } 

.uppercase { text-transform: uppercase; }

.fs-900 { font-size: var(--fs-900); }
.fs-800 { font-size: var(--fs-800); }
.fs-700 { font-size: var(--fs-700); }
.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
    line-height: 1.1;
}
