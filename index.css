/* ======================== Reset and set up styles ======================== */
html{
  font-size: 62.5%;
}

/*in order to maintain t   ability to modify the color opacity I storage the content of rgb*/
/* the prefixes are useful when you try to find some variable witch crl + space */
:root{
  /*colors*/
  --clr-dark: 11 13 23;
  --clr-accent: 208 214 249;
  --clr-light: 249 249 249;

  /*font-size*/

  --fs-200: 1.4rem;
  --fs-300: 1.6rem;
  --fs-400: 1.46rem; /*base font size*/ 
  --fs-500: 2.8rem;
  --fs-600: 1.6rem;     
  --fs-700: 2.4rem;
  --fs-800: 5.6rem;
  --fs-900: 8.0rem;
  --fs-900: clamp(8.0rem, 10vw + 1rem, 15rem);
  
  /* font-family */
  --ff-serif: 'Bellefair', serif;
  --ff-sans-cond: 'Barlow Condensed', sans-serif;
  --ff-sans-normal: 'Barlow', sans-serif;

  /* letter-spacing */
  --ls-400: 2.35px;
  --ls-500: 2.7px;
  --ls-600: 4.75px;
}

/* Tablets */
@media (min-width: 375px) {
  :root{
    --fs-400: 1.6rem; /*base font size*/ 
    --fs-600: 2.4rem;     
    --fs-700: 4.0rem;
    --fs-800: 8.0rem;
  }
}

/* Desktop */
@media (min-width: 769px) {
  :root{
    --fs-200: 1.4rem;
    --fs-300: 1.6rem;
    --fs-400: 1.8rem; /*base font size*/ 
    --fs-500: 2.8rem;
    --fs-600: 3.2rem;     
    --fs-700: 5.6rem;
    --fs-800: 10rem;
  }
}


/* ======================== Reset and set up styles ========================*/

*,
*::before,
*::after{
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
p{
  font-weight: 400;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  background: rgb( var(--clr-dark) );
  color: rgb( var(--clr-light) );
  line-height: 1.5;

  display: grid;
  grid-template-rows: min-content 1fr;

  overflow-x: hidden;
}

img,
picture {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
}

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/*======================== Utility classes ========================*/
/*====== General======*/

.grid{
  display: grid;
  gap: var(--gap, 1.6rem);
}

.flex{
  display: flex;
  gap: var(--gap, 1.6rem);
}

.d-block{
  display: block;
}

.flow > *:where(:not(:first-child)){
  margin-block-start: var(--flow-space, 1.6rem);  
}

.container{
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 112.9rem; /*the value its relative to the project */
}

.grid-container{
  position: relative;
  z-index: 0;
  display: grid; 
  row-gap: 18%;
  text-align: center;
  place-items: center;
  margin: 0 2em;
}

.grid-container *{
  max-width: 50ch;
}

@media (min-width: 769px) {
 .grid-container{
  column-gap: var(--container-gap, 15vw);
  grid-template-columns: minmax(1.6rem, 1fr) repeat(2, minmax(0,50rem)) minmax(1.6rem, 1fr);
  text-align: left;
  justify-items: center;

 }

 .grid-container > *:first-child{
    grid-column: 2;
  }

  .grid-container > *:last-child{
    grid-column: 3;
  }

  .home .grid-container{
    align-content: end;
    /* if the 9.6rem is bigger means that the user has a longer screen than expected, in that case de rem (a fixed - dev unit) should be use. */
    padding-block-end: max(9.6rem, 20vh);
  }
  
}

/* hide the Element but it remains in the DOM */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}


.skip-to-content{
  position: absolute;
  padding: .5em 1em;
  border-radius: .5em;
  left: 1em;
  top: 10em;
  transform: translateX(-120%);
  width: min-content;
}

@media (min-width: 769px) {
  .skip-to-content{
    top: 1em;
    transform: translateY(-150%);
    left: 10vw;
    width: max-content;
  }
}

.skip-to-content:focus{
  transform: translate(0%);
}

/*====== color ======*/

.bg-dark { background-color: rgb( var(--clr-dark) );}
.bg-accent { background-color: rgb( var(--clr-accent) );}
.bg-light { background-color: rgb( var(--clr-light) );}

.text-dark { color: rgb( var(--clr-dark) );}
.text-accent { color: rgb( var(--clr-accent) );}
.text-light { color: rgb( var(--clr-light) );}

/*====== typography ======*/

.ff-serif { font-family: var(--ff-serif); } 
.ff-sans-cond { font-family: var(--ff-sans-cond); } 
.ff-sans-normal { font-family: var(--ff-sans-normal); } 

.letter-spacing-1 { letter-spacing: 4.75px; } 
.letter-spacing-2 { letter-spacing: 2.7px; } 
.letter-spacing-3 { letter-spacing: 2.35px; } 

.uppercase { text-transform: uppercase; }

.fs-900 { font-size: var(--fs-900); }
.fs-800 { font-size: var(--fs-800); }
.fs-700 { font-size: var(--fs-700); }
.fs-600 { font-size: var(--fs-600); }
.fs-500 { font-size: var(--fs-500); }
.fs-400 { font-size: var(--fs-400); }
.fs-300 { font-size: var(--fs-300); }
.fs-200 { font-size: var(--fs-200); }

.ls-400 { letter-spacing: var(--ls-400);}
.ls-500 { letter-spacing: var(--ls-500);}
.ls-600 { letter-spacing: var(--ls-600);}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
    line-height: 1.1;
}

/*============================= micro-components-classes =============================*/


.numbered-title{
  font-size: var(--fs-500);
  font-family: var(--ff-sans-cond);
  letter-spacing: var(--ls-600);
  text-transform: uppercase;
}

.numbered-title > span{
  color: rgb( var(--clr-light) / .25);
  margin-inline-end: .5em;
  font-weight: bold;
}



/* ------------------- */
/* Components          */
/* ------------------- */

.large-button{
  font-size: 3.2rem;
  display: inline-grid;
  position: relative;
  padding: 0 2em;
  place-items: center;
  text-decoration: none;
  border-radius: 50%;
  aspect-ratio: 1 / 1;
  z-index: 1;
}

.large-button::before{
  content: "";
  z-index: -1;
  position: absolute;
  width:  100%;
  height: 100%;
  background-color: rgb( var(--clr-light) / .13);
  opacity: 0;
  border-radius: 50%;
  transition: transform 0.3s ease-in-out, opacity 0.3s linear;
}

.large-button:hover::before,
.large-button:focus::before{
  opacity: 1;
  transform: scale(1.3);
}

.primary-header{
  position: relative;
  z-index: 1;
  justify-content: space-between;
  align-items: center;
}

.primary-navigation {
  --underline-gap: 3.9rem;
  list-style: none;
  margin: 0;
  background: rgb( var(--clr-dark) / 0.95);
}

.primary-navigation a{
  text-decoration: none;
}

.primary-navigation a > span{
  font-weight: 700;
}

@supports (backdrop-filter: blur(2rem)){
  .primary-navigation{
    background-color: rgb( var(--clr-light) / 0.03 );
    backdrop-filter: blur(2rem);
  }
}

.mobile-nav-toggle{
  display: none;
}

.logo{
  margin-block: 2rem;
  margin-inline: clamp(2.4rem, 7vw, 5.5rem);
}

/* This affect only mobile screen, because i'm adding complexity its cumbersome apply mobile first and re-write all the new properties to delete them*/
@media (max-width: 560px) {
  .primary-navigation{
    position: fixed;
    z-index: 0;
    margin: 0;
    /* always adjust Y-padding in 24vh unless 13rem has been reached, min 32rem else 15vh */
    padding: min(32rem, 15vh) 3.2rem;  
    inset: 0 0 0 30%;
    flex-direction: column;
    --underline-gap: 3.2rem;
    list-style: none;
    transform: translateX(100%);
    transition: transform .5s ease-in;
  }

  .primary-navigation[data-isVisible="true"]{
    transform: translate(0%);
  }

  .mobile-nav-toggle[aria-expanded="true"]{
    background-image: url(./assets/shared/icon-close.svg);
  }
  
  .mobile-nav-toggle:focus-visible{
    outline: 2px solid rgb( var(--clr-light));
    outline-offset: 8px;
  }

  .primary-navigation.underline-indicators > *{
    border: 0;
    --underline-gap: 1rem
  }
  
  .mobile-nav-toggle{
    display: inline-block;
    position: absolute;
    z-index: 1;
    top: 3.2rem;
    right: 1.6rem;
    border: 0;
    background: transparent;
    background-image: url(./assets/shared/icon-hamburger.svg);    
    background-size: cover;
    width: 2.4rem;
    aspect-ratio: 1;
  }
}
@media (min-width: 560px) {
  .primary-navigation{
    --gap: clamp(1.5rem, 7vw, 7rem);
    padding: 0 clamp(7rem, 10vw, 16.7rem) 0 clamp(3rem, 4vw, 10rem);
  }
}
@media (min-width: 560px) and (max-width: 766.99px) {
  .primary-navigation{
    padding: 0 4rem 0 4rem;
  }

  .primary-navigation a > span{
    display: none;
  }
}

@media (min-width: 768px) {
  .primary-navigation{
    margin-block: 4rem;
  }

  .primary-header::after{
    content: "";
    position: relative;
    background-color: rgb( var(--clr-light) / .25);
    height: 1px;
    width: 100%;
    margin-right: -3.7rem;
    order: 1;
  }
  .primary-header nav {
    order: 2;
  }
}

.underline-indicators > *{
  padding-block: var(--underline-gap, 1.6rem);
  border: 0;
  border-bottom: 0.32rem solid rgb( var(--clr-light) / 0);
  cursor: pointer;
  min-width: max-content;
}

.underline-indicators > *:hover,
.underline-indicators > *:focus  {
  border-color: rgb( var(--clr-light) / .5);
  outline: none;
}

.underline-indicators > .active,
.underline-indicators > [aria-selected="true"]{
  border-color: rgb( var(--clr-light));
  color: rgb( var(--clr-light) );
}




.tab-list{
  --gap: 4em;
}

.dot-indicators{
  --gap: 3.2rem;
}

.dot-indicators > *{
  border: 0;
  aspect-ratio: 1;
  padding: .5em;
  border-radius: 50%;
  background-color: rgb( var(--clr-light) / .25);
  cursor: pointer;
}

.dot-indicators > *:hover,
.dot-indicators > *:focus{
  background-color: rgb( var(--clr-light) / .5);
}

.dot-indicators > [aria-selected="true"]{
  background-color: rgb( var(--clr-light) / 1);
}


.number-indicators > *{
  --flow-space: 3rem; 
  display: block;
  width: 3em;
  aspect-ratio: 1 / 1;
  border-radius: 50%;
  border: 1px solid rgb( var(--clr-light) / .25);
}

.number-indicators > *:hover,
.number-indicators > *:focus{
  border: 1px solid rgb( var(--clr-light) / 1);
}

.number-indicators > [aria-selected="true"]{
  color: rgb( var(--clr-dark) );
  background-color: rgb( var(--clr-light) );
  border: 1px solid rgb( var(--clr-light) / 1);
}



/* ----------------------------- */
/* Page specific background      */
/* ----------------------------- */

body{
  background-size: cover;
  background-position: bottom center;
}

.home{
  background-image: url(assets/home/background-home-mobile.jpg);
}

/* Tablets */
@media (min-width: 375px) {
  .home{
    background-image: url(assets/home/background-home-tablet.jpg);
  }
}

/* Desktop */
@media (min-width: 769px) {
  .home{
    background-image: url(assets/home/background-home-desktop.jpg);
  }
}
